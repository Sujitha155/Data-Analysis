# -*- coding: utf-8 -*-
"""Data Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vT1f7qxzOWvz2iHbYzQMYiiM-XNLTv4r
"""

# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load the Iris dataset
df = sns.load_dataset('iris')

# Display the first 5 rows of the dataset
print("Dataset Preview:\n", df.head())

# Display basic information about the dataset
print("\nBasic Information:\n")
df.info()

# Display summary statistics for numerical columns
print("\nSummary Statistics:\n", df.describe())

# Checking for missing values
missing_values = df.isnull().sum()
print("\nMissing Values:\n", missing_values)

# Calculate central tendency and dispersion for each numerical column
numerical_cols = df.select_dtypes(include=np.number).columns

numerical_cols

print("\nMean Values:\n", df[numerical_cols].mean())
print("\nMedian Values:\n", df[numerical_cols].median())
# Note: Mode can be calculated on non-numeric columns, so we don't filter here
print("\nMode Values:\n", df.mode().iloc[0])
print("\nVariance:\n", df[numerical_cols].var())
print("\nStandard Deviation:\n", df[numerical_cols].std())
print("\nRange:\n", df[numerical_cols].max() - df[numerical_cols].min())

# Data Visualization
# 1. Distribution of Sepal Length
plt.figure(figsize=(10, 6))
sns.histplot(df['sepal_length'], kde=True, color='blue')
plt.title('Distribution of Sepal Length', fontsize=16)
plt.xlabel('Sepal Length (cm)')
plt.ylabel('Frequency')
plt.grid(True)
plt.show()

# 2. Boxplot of Sepal Width
plt.figure(figsize=(8, 5))
sns.boxplot(x=df['sepal_width'], color='lightgreen')
plt.title('Boxplot of Sepal Width', fontsize=16)
plt.xlabel('Sepal Width (cm)')
plt.grid(True)
plt.show()

# 3. Correlation Heatmap
plt.figure(figsize=(10, 8))
corr = df.select_dtypes(include=['float', 'int']).corr()
print(corr)

sns.heatmap(corr, annot=True, cmap='coolwarm', linewidths=0.5)
plt.title('Correlation Heatmap of Iris Dataset')
plt.show()

# 4. Pair Plot to visualize relationships between features
sns.pairplot(df, hue='species', markers=["o", "s", "D"], palette='Dark2')
plt.suptitle('Pair Plot of Iris Dataset', y=1.02, fontsize=16)
plt.show()